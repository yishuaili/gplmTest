<!--
//Copyright (c) 2009, Mark Sivill, Sales Engineering, Salesforce.com Inc.
//All rights reserved.
//
//Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
//Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. 
//Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
//Neither the name of the salesforce.com nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. 
//THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
//INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
//DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
//SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
//LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
//CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, 
//EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

//
// History
//
// Version  Date            Author          Comments
// 1.0      21-01-2009      Mark Sivill     Initial version
// 1.1		09-02-2009		Mark Sivill		Can now change background colour
// 1.2.0	18-03-2009		Mark Sivill		Change Google display language using Custom Labels
// 1.3.0	23-03-2009		Mark Sivill		Allow language code to be passed to Google Maps
//
//
// Notes
//
// Please change the Google Map API Key to your newly generated key. Please go to http://code.google.com/apis/maps/signup.html to generate a new key
//
//
-->

<apex:component >

	<!--
	//
	// change start
	// change the "default" value (CHANGE_ME) to your generated Google Maps API key
	//
	-->

    <apex:attribute name="googleMapAPIKey" description="Google maps API key needed to generate map, sign up at http://code.google.com/apis/maps/signup.html"
        type="string" default="CHANGE_ME"/>

	<!--
	//
	// change end
	//
	-->

        
    <apex:attribute name="googleMapURL" description="URL of Google map for example http://maps.google.com, http://maps.google.fr, http://maps.google.es, http://maps.google.co.uk, etc"
        type="string" />
    <apex:attribute name="height" description="Google map height in pixels"
        type="integer" default="200" />
    <apex:attribute name="width" description="Google map width in pixels"
        type="integer" default="700" />
    <apex:attribute name="iconColour" description="Colour of icon marker in map for example #236FBD and #8A9EBE (colours for account)and #56458C (colours for contact)"
        type="string" default="#FF0000" />
    <apex:attribute name="backgroundColour" description="Background Colour around the Google Map for example set to #FFFFFF to change from default salesforce background colour"
        type="string" default="#F3F3EC" />
    <apex:attribute name="address" description="Address to search for in Google maps, including the country in the address helps accuraccy"
        type="string" required="true" />

    <apex:outputPanel id="top_level_panel" layout="block" style="background-color: {!backgroundColour}; margin-left: auto; margin-right: auto">
        <apex:outputPanel id="map_canvas" layout="block" style="width: {!width}px; height: {!height}px; margin-left: auto; margin-right: auto">
        </apex:outputPanel>
    </apex:outputPanel>

    <!-- multi-line workround as BillingStreet may have more than one line -->
    <!-- which causes problems when text is placed directly into javascript -->
    <div id="hiddenFieldAddress" style="display:none">{!address}</div>
    <div id="hiddenFieldLocalAddressFound" style="display:none">{!$Label.GMI_LocalAddressFound}</div>
    <div id="hiddenFieldLocalAddressNotFound" style="display:none">{!$Label.GMI_LocalAddressNotFound}</div>
    <div id="hiddenFieldLocalShowMap" style="display:none">{!$Label.GMI_LocalShowMap}</div>
    <div id="hiddenFieldErrorHeader" style="display:none">{!$Label.GMI_GenerateKey}</div>  
    <div id="hiddenFieldErrorDetails" style="display:none">{!$Label.GMI_UpdateComponent}</div>
    <div id="hiddenFieldErrorWebsite" style="display:none">{!$Label.GMI_WebsiteNeeded}</div>

    <div id="hiddenFieldGoogleLanguageCode" style="display:none">{!$Label.GMI_GoogleLanguageCode}</div>
    <div id="hiddenFieldgoogleMapURL" style="display:none">{!$Label.GMI_googleMapURL}</div>
    <div id="hiddenFieldgoogleMapURLOverride" style="display:none">{!googleMapURL}</div>
       
    <script type="text/javascript">
        // address multi-line workaround
		var safeAddress = document.getElementById('hiddenFieldAddress').innerHTML.replace(/\s+/g, ' ');
		// also need to have if any Label span more than one line
		var safeLocalAddressFound = document.getElementById('hiddenFieldLocalAddressFound').innerHTML.replace(/\s+/g, ' ');
		var safeLocalAddressNotFound = document.getElementById('hiddenFieldLocalAddressNotFound').innerHTML.replace(/\s+/g, ' ');
		var safeLocalShowMap = document.getElementById('hiddenFieldLocalShowMap').innerHTML.replace(/\s+/g, ' ');
		var safeErrorHeader = document.getElementById('hiddenFieldErrorHeader').innerHTML.replace(/\s+/g, ' ');
		var safeErrorDetails = document.getElementById('hiddenFieldErrorDetails').innerHTML.replace(/\s+/g, ' ');
		var safeErrorWebsite = document.getElementById('hiddenFieldErrorWebsite').innerHTML.replace(/\s+/g, ' ');
		var safeGoogleLanguageCode = document.getElementById('hiddenFieldGoogleLanguageCode').innerHTML.replace(/\s+/g, ' ');

	</script>

	<script type="text/javascript">
        // see if Google api URL override has been set
        var safeGoogleMapURL = document.getElementById('hiddenFieldgoogleMapURL').innerHTML.replace(/\s+/g, ' ');
        var safeGoogleMapURLOverride = document.getElementById('hiddenFieldgoogleMapURLOverride').innerHTML.replace(/\s+/g, ' ');
        if (safeGoogleMapURLOverride != "")
        {
            safeGoogleMapURL = safeGoogleMapURLOverride;
        }
        //change google api
        document.write('<script type="text/javascript" src="' + safeGoogleMapURL + '/maps?file=api&v=2&key={!googleMapAPIKey}&sensor=false&hl=' + safeGoogleLanguageCode + '"><\/scr' + 'ipt>'); 
   </script>


    <script src="{!URLFOR($Resource.GoogleMapsInternational, 'googleMapsInternational.js')}" type="text/javascript"></script>
    <script type="text/javascript">
                
    // run initialize
    initialize( safeAddress, '{!iconColour}', safeGoogleMapURL, '{!width}', '{!height}', safeGoogleLanguageCode, safeLocalAddressFound, safeLocalAddressNotFound, safeLocalShowMap, safeErrorHeader, safeErrorDetails, safeErrorWebsite, '{!$Component.map_canvas}' );        
            
    </script>

</apex:component>